version: '3'
services:
  postgresql_db:
    restart: always
    build:
      context: ./docker/postgresql
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./docker/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    networks:
      - esb_network
  pgadmin:
    container_name: pgadmin4_social_network_container
    image: dpage/pgadmin4:6.8
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - '5050:80'
    networks:
      - esb_network
    depends_on:
      - postgresql_db
  backend:
    environment:
      - TESTING=0
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/usr/src/app
    command: bash -c "cd /usr/src/app/ && alembic upgrade head &&
      uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    #    command: bash -c "cd /usr/src/app/ && alembic upgrade head &&
    #      gunicorn main:app --workers 9 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000"
    depends_on:
      - postgresql_db
    networks:
      - esb_network
    ports:
      - '8000:8000'
  redis:
    image: redis:7.0-rc
    container_name: asyncpg_social_network_redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --requirepass ${REDIS_PASSWORD}
    depends_on:
      - backend
    networks:
      - esb_network
networks:
  esb_network:
    driver: bridge